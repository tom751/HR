// @generated by protobuf-ts 2.5.0
// @generated from protobuf file "hr.proto" (package "hr", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Hr } from "./hr";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { User } from "./hr";
import type { LoginDetails } from "./hr";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service hr.Hr
 */
export interface IHrClient {
    /**
     * @generated from protobuf rpc: Login(hr.LoginDetails) returns (hr.User);
     */
    login(input: LoginDetails, options?: RpcOptions): UnaryCall<LoginDetails, User>;
}
/**
 * @generated from protobuf service hr.Hr
 */
export class HrClient implements IHrClient, ServiceInfo {
    typeName = Hr.typeName;
    methods = Hr.methods;
    options = Hr.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Login(hr.LoginDetails) returns (hr.User);
     */
    login(input: LoginDetails, options?: RpcOptions): UnaryCall<LoginDetails, User> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoginDetails, User>("unary", this._transport, method, opt, input);
    }
}
